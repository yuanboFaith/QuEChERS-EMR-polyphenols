# plot
plt.background.vs.spk =
d.background %>%
ggplot(aes(x = background.spk.ratio, y = std,
shape = level, color = matrix, fill = matrix)) +
scale_x_log10(breaks = c(.001, .01, .1, 1, 10, 100, 1000)) +
scale_y_log10() +
annotation_logticks() +
geom_smooth(aes(group = 1),
se = F, color = "black", show.legend = F, size = 2) +
geom_point(size = 4, alpha = .7) +
geom_point(size = 4, alpha = .7, fill = "white") +
geom_text_repel(data = d.background[!d.background$bad %>% is.na(), ],
aes(label = paste(compound, "-", matrix),
x = background.spk.ratio), fontface = "bold",
size = 4.5) +
scale_shape_manual(values = c("A" = 21, "C" = 25)) +
scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2")
plt.background.vs.spk
# check validation success vs. background interference
d.background = read_excel(path, sheet = "background.vs.spike")
d.background = d.background %>%
gather(-c(matrix, level), key = compound, value = background.spk.ratio)
library(tidyverse)
library(readxl)
library(stringr)
library(rebus)
library(RColorBrewer)
library(cowplot)
library(viridis)
library(ggrepel)
# global plot setup
theme_set(theme_bw() +
theme(
# strip.text = element_text(face = "bold"),
strip.text = element_blank(),
strip.background = element_blank(),
strip.placement = "outside",
axis.text = element_text(colour = "black", size = 17),
axis.title = element_text(colour = "black", face = "bold", size = 18),
panel.grid = element_blank()))
# input data
path = "/Users/Boyuan/Desktop/My publication/18. Polyphenol EMR J. Food Chem (Zhiya)/ready files/Validation result.xlsx"
d = read_excel(path, sheet = "all")
str(d)
# remove Catechin analogues of poor recovery at drying step
d2 = d %>% select(-c("C", "EC", "PAC-B2", "4-O-Me-C", "3-O-Me-EC", "4-O-Me-EC"))
str(d2)
# tidy up
d2.tidy = d2 %>%
gather(-c(matrix, validation, mean.sd, IScorrection),
key = compound, value = value)
# convert value to percentage
d2.tidy = d2.tidy %>% mutate(value = value * 100) %>%
spread(key = mean.sd, value = value)
d2.tidy$compound %>% n_distinct()
# accuracy
d.accuracy = d2.tidy %>%
filter(validation %>% str_detect("Accuracy"))
# add spike level
d.accuracy$level = d.accuracy$validation %>%
str_extract(pattern = DOT %R% WRD) %>%
str_extract(WRD)
d.accuracy = d.accuracy %>%
mutate(validation = "Accuracy")
# define plot numbers
color.compound = (c(brewer.pal(8, "Dark2"),
brewer.pal(11, "Spectral")[-c(5, 6, 7)],# remove light colors
"black", "grey") %>% sort() %>%
colorRampPalette())(d2.tidy$compound %>% n_distinct())
n.matrix = d.accuracy$matrix %>% n_distinct()
# plot accuracy
dg = .5
d.badAccuracy = d.accuracy %>% filter(mean < 0 | mean > 200 | std > 50)
d.badAccuracy
# Showing what data points are removed from plot
plt.accuracy = d.accuracy %>%
anti_join(d.badAccuracy) %>%
ggplot(aes(x = level, y = mean, color = compound)) +
geom_boxplot(outlier.alpha = 0, aes(group = level), fill = "white", width = .8) +
annotate("rect", alpha = .15, fill = "springgreen4",
xmin = .5, xmax = 2.5, ymin = 80, ymax = 120) +
geom_boxplot(outlier.alpha = 0, aes(group = level), fill = "white", width = .8) +
geom_errorbar(size = .3,
aes(ymin = mean - std,
ymax = mean + std),
position = position_dodge(dg)) +
geom_point(size = 4, position = position_dodge(dg), fill = "white", shape = 21) +
geom_point(size = 4, position = position_dodge(dg), alpha = 0.3) +
scale_color_manual(values = color.compound) +
scale_fill_manual(values = color.compound) +
facet_grid(matrix ~ validation, scales = "free_y", switch = "y") +
labs(x = "Spike level") +
theme(legend.position = "none", axis.title.y = element_blank()) +
geom_segment(aes(x = .5, xend = 2.5, y = 100, yend = 100),
color = "darkgreen", linetype = "dashed", size = .1)
# plt.accuracy
# recovery
d.recovery = d2.tidy %>%
filter(validation %>% str_detect("recovery"))
# cleanup and put in order sample prep step names
d.recovery$validation = d.recovery$validation %>% str_remove(pattern = "recovery" %R% DOT)
d.recovery$validation =
d.recovery$validation %>% factor(
levels = d.recovery$validation %>% unique() %>% rev(),
ordered = T)
# check outlier numbers
d.badRecovery = d.recovery %>% filter(mean > 200 | std > 50 | std < 0 )
d.badRecovery
# plot
dg2 = .5
plt.recovery = d.recovery %>%
anti_join(d.badRecovery) %>%
ggplot(aes(x = IScorrection, y = mean, color = compound)) +
geom_boxplot(outlier.alpha = 0, aes(group = IScorrection), fill = "white", width = .8) +
annotate("rect", alpha = .15, fill = "springgreen4",
xmin = .5, xmax = 2.5, ymin = 80, ymax = 120) +
geom_boxplot(outlier.alpha = 0, aes(group = IScorrection), fill = "white", width = .8) +
geom_errorbar(size = .3, aes(ymin = mean - std,
ymax = mean + std),
position = position_dodge(dg2)) +
geom_point(size = 4, position = position_dodge(dg2), fill = "white", shape = 21) +
geom_point(size = 4, position = position_dodge(dg2), alpha = 0.1) +
scale_color_manual(values = color.compound) +
scale_fill_manual(values = color.compound) +
facet_grid(matrix ~ validation,
scales = "free_y", switch = "y") +
labs(x = "IS-correction") +
theme(legend.position = "none", axis.title.y = element_blank()) +
geom_segment(aes(x = .5, xend = 2.5, y = 100, yend = 100),
color = "darkgreen", linetype = "dashed", size = .1)
# plt.recovery
# matrix effect
d.matrixEffect = d2.tidy %>%
filter(validation %>% str_detect("Matrix effect"))
# check outlier numbers
d.badMatrix = d.matrixEffect %>% filter(mean > 200 | std > 50 | std < 0 )
d.badMatrix
# plot
dg3 = .5
plt.MatrixEffect = d.matrixEffect %>%
anti_join(d.badMatrix) %>%
ggplot(aes(x = IScorrection, y = mean, color = compound)) +
geom_boxplot(outlier.alpha = 0, aes(group = IScorrection), fill = "white", width = .8) +
annotate("rect", alpha = .15, fill = "springgreen4",
xmin = .5, xmax = 2.5, ymin = 80, ymax = 120) +
geom_boxplot(outlier.alpha = 0, aes(group = IScorrection), fill = "white", width = .8) +
geom_errorbar(size = .3, aes(ymin = mean - std,
ymax = mean + std),
position = position_dodge(dg3)) +
geom_point(size = 4, position = position_dodge(dg3), fill = "white", shape = 21) +
geom_point(size = 4, position = position_dodge(dg3), alpha = 0.3) +
scale_color_manual(values = color.compound) +
scale_fill_manual(values = color.compound) +
facet_grid(matrix ~ validation,
scales = "free_y", switch = "y") +
labs(x = "IS-correction") +
theme(legend.position = "none", axis.title.y = element_blank()) +
geom_segment(aes(x = .5, xend = 2.5, y = 100, yend = 100),
color = "darkgreen", linetype = "dashed", size = .1)
# plt.MatrixEffect
# Processing efficiency
d.processEfficiency = d2.tidy %>%
filter(validation %>% str_detect("Overall process efficiency"))
# check outlier numbers
d.badProcessEfficiency = d.processEfficiency %>% filter(mean > 200 | std > 50 | std < 0 )
d.badProcessEfficiency
# plot
dg4 = .5
plt.processEfficiency = d.processEfficiency %>%
anti_join(d.badProcessEfficiency) %>%
ggplot(aes(x = IScorrection, y = mean, color = compound)) +
geom_boxplot(outlier.alpha = 0, aes(group = IScorrection), fill = "white", width = .8) +
annotate("rect", alpha = .15, fill = "springgreen4",
xmin = .5, xmax = 2.5, ymin = 80, ymax = 120) +
geom_boxplot(outlier.alpha = 0, aes(group = IScorrection), fill = "white", width = .8) +
geom_errorbar(size = .3, aes(ymin = mean - std,
ymax = mean + std),
position = position_dodge(dg4)) +
geom_point(size = 4, position = position_dodge(dg4), fill = "white", shape = 21) +
geom_point(size = 4, position = position_dodge(dg4), alpha = 0.3) +
scale_color_manual(values = color.compound) +
scale_fill_manual(values = color.compound) +
facet_grid(matrix ~ validation,
scales = "free_y", switch = "y") +
labs(x = "IS-correction") +
theme(legend.position = "none", axis.title.y = element_blank()) +
geom_segment(aes(x = 0.5, xend = 2.5, y = 100, yend = 100),
color = "darkgreen", linetype = "dashed", size = .1)
# plt.processEfficiency
# -------# -------# -------# -------# -------# -------
p1 = plot_grid(plt.accuracy,
plt.recovery,
plt.MatrixEffect,
plt.processEfficiency,
nrow = 1,
rel_widths = c(1, 3.5, 1, 1))
# Check outlier compounds and associated matrix
d.badALL = d.badAccuracy %>% select(-level) %>% rbind(d.badMatrix) %>%
rbind(d.badRecovery) %>% rbind(d.badProcessEfficiency)
d.badALL %>% as.data.frame()
d.badALL %>% select(matrix, compound) %>%
table()
# bad criteria: filter(mean > 200 | std > 50 | std < 0 )
# new global setup
theme_set(theme_bw() +
theme(
strip.text = element_text(face = "bold"),
# strip.text = element_blank(),
strip.background = element_blank(),
strip.placement = "outside",
axis.text = element_text(colour = "black", size = 15.5),
axis.title = element_text(colour = "black", face = "bold", size = 15.5),
panel.grid = element_blank(),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15, face = "bold")))
# ----# -----
# plt.allMatrix.accuracy = d2.tidy %>%
#   filter(validation %>% str_detect("Accuracy")) %>%
#
#   ggplot(aes(x =  mean, color = validation, fill = validation)) +
#   geom_histogram(binwidth = 5, alpha = .4, position = "dodge") +
#   scale_x_continuous(limits = c(0, 200), breaks = seq(0, 200, 20)) +
#   scale_y_continuous(breaks = seq(0, 200, 10)) +
#   theme(legend.position = "bottom")
#
# plt.allMatrix.accuracy
#  2D density plot
d2.tidy$validation = d2.tidy$validation %>%
str_replace(pattern = "Accuracy.A", replacement = "Accuracy")
d2.tidy$validation = d2.tidy$validation %>%
str_replace(pattern = "Accuracy.B", replacement = "Accuracy")
plt.allMatrix.accuracy.2Ddensity =
d2.tidy %>%
filter(validation %>% str_detect("Accuracy")) %>%
ggplot(aes(x = mean, y = std)) +
stat_density_2d(aes(fill = stat(density)), geom = "raster", contour = F) +
geom_point(color = "white", shape = ".", alpha = .4) +
# scale_fill_viridis(option = "inferno") +
scale_fill_viridis(option = "D") +
geom_rug(sides = "tr", color = "black", alpha = 0.2) +
scale_x_log10() + scale_y_log10() +
annotation_logticks() +
# label outliers not presented in the box-scatter plot
geom_text_repel(data = d.badAccuracy,
aes(label = paste(compound,"_", matrix, "_", level)),
size = 4, color = "snow3")
# plt.allMatrix.accuracy.2Ddensity
# D2 density plot for recovery (Absolute, without IS-correction; extraction, EMR, and drying)
d2.tidy$validation %>% unique()
d2.tidy.stepwiseRecovery.absolute = d2.tidy %>%
filter(validation %in% c("recovery.Extraction", "recovery.Drying", "recovery.EMR")) %>%
filter(IScorrection == "F")
d2.tidy.stepwiseRecovery.absolute$validation =
d2.tidy.stepwiseRecovery.absolute$validation %>% str_remove(pattern = "recovery.") %>%
str_replace(pattern = "Drying", replacement = "Dry")
# simplify bad recovery database
d.badRecoverySimplified = d.badRecovery %>%
filter(validation != "Overall recovery")
d.badRecoverySimplified$validation =
d.badRecoverySimplified$validation %>%
str_replace(pattern = "Drying", replacement = "Dry")
# plot
plt.allMatrix.Recovery.2Ddensity =
d2.tidy.stepwiseRecovery.absolute %>%
ggplot(aes(x = mean, y = std)) +
stat_density_2d(aes(fill = stat(density)), geom = "raster", contour = F) +
geom_point(color = "white", shape = ".", alpha = .4) +
# scale_fill_viridis(option = "inferno") +
scale_fill_viridis(option = "D") +
geom_rug(sides = "tr", color = "black", alpha = 0.2) +
scale_x_log10() + scale_y_log10() +
annotation_logticks() +
# label outliers not presented in the box-scatter plot
geom_text_repel(data = d.badRecoverySimplified,
aes(label = paste(compound,"_", matrix, "_", validation)),
size = 2, color = "snow3", arrow = F) +
facet_wrap(~validation, nrow = 1)
# plt.allMatrix.Recovery.2Ddensity
# d2.tidy.stepwiseRecovery.absolute %>%
#   ggplot(aes(x =  mean, color = IScorrection, fill = IScorrection)) +
#   geom_histogram(binwidth = 5, alpha = .4, position = "dodge") +
#   scale_x_continuous(limits = c(0, 200), breaks = seq(0, 200, 20)) +
#   scale_y_continuous(breaks = seq(0, 200, 10)) +
#   theme(legend.position = "bottom")  +
#   facet_wrap(~validation, nrow = 1)
# check validation success vs. background interference
d.background = read_excel(path, sheet = "background.vs.spike")
d.background = d.background %>%
gather(-c(matrix, level), key = compound, value = background.spk.ratio)
d.background = d.accuracy %>%
filter(IScorrection == "T") %>%
left_join(d.background, by = c("matrix", "compound", "level"))
# also add back accuracy dataset
d.background = d.background %>% left_join(
d.badAccuracy %>% select(-mean, -std) %>% mutate(bad = "bad"))
# plot
plt.background.vs.spk =
d.background %>%
ggplot(aes(x = background.spk.ratio, y = std,
shape = level, color = matrix, fill = matrix)) +
scale_x_log10(breaks = c(.001, .01, .1, 1, 10, 100, 1000)) +
scale_y_log10() +
annotation_logticks() +
geom_smooth(aes(group = 1),
se = F, color = "black", show.legend = F, size = 2) +
geom_point(size = 4, alpha = .7) +
geom_point(size = 4, alpha = .7, fill = "white") +
geom_text_repel(data = d.background[!d.background$bad %>% is.na(), ],
aes(label = paste(compound, "-", matrix),
x = background.spk.ratio), fontface = "bold",
size = 4.5) +
scale_shape_manual(values = c("A" = 21, "C" = 25)) +
scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2")
plt.background.vs.spk
p2 = plot_grid(plt.allMatrix.accuracy.2Ddensity,
plt.background.vs.spk)
p2
# plot_grid(p1, p2, nrow = 2,
#           rel_heights = c(7, 2))
# p1 small screen 17 X 12
p1
plt.allMatrix.accuracy.2Ddensity
plt.background.vs.spk
plt.allMatrix.accuracy.2Ddensity
theme_set(theme_bw() + theme(axis.text = element_text(colour = "black"),
axis.title = element_text(colour = "black", face = "bold"),
strip.background = element_blank(),
strip.text = element_text(face = "bold")))
path = "/Users/Boyuan/Desktop/My publication/18. Polyphenol EMR J. Food Chem (Zhiya)/Polyphenol EMR All Data.xlsx"
# ACN percentage
d.opt.pct = read_excel(path, sheet = "ACN percent opt2")
d.opt.pct = d.opt.pct %>%
gather(-c(`Data File`, Name, `Acq. Date-Time`, solvent.pct), key = compound, value = resp)
x = d.opt.pct %>% filter(solvent.pct == "ctrl") %>%
group_by(compound) %>%
summarise(resp.ctrl.mean = mean(resp),resp.ctrl.sd = sd(resp))
y = d.opt.pct %>% filter(solvent.pct != "ctrl") %>%
group_by(solvent.pct, compound) %>%
summarise(resp.mean = mean(resp), resp.sd = sd(resp))
d.opt.pct.recovery = y %>% left_join(x, by = c("compound")) %>%
mutate(recovery.mean = resp.mean / resp.ctrl.mean * 100,
recovery.sd = sqrt((resp.sd/resp.mean)^2 + (resp.ctrl.sd/resp.ctrl.mean)^2) * recovery.mean  )
d.opt.pct.recovery
plt.ACN.pct = d.opt.pct.recovery %>%
ggplot(aes(x = solvent.pct, y = recovery.mean, color = compound)) +
geom_boxplot(outlier.alpha = 0, aes(group = solvent.pct)) +
# geom_errorbar(aes(ymin = recovery.mean - recovery.sd, ymax = recovery.mean + recovery.sd),
#               position = position_dodge(.3), size = .2, width = 2) +
geom_point(position = position_dodge(.4), shape = 21, fill = "white", size = 1) +
theme(legend.position = "none") +
# coord_flip(ylim = c(0, 130)) +
scale_y_continuous(breaks = seq(0, 150, by = 10)) +
labs(y = "Recovery", x= "Acetonitrile percentage") +
coord_cartesian(ylim = c(0, 130))
plt.ACN.pct
# Secondary wash volume
d.opt.wash = read_excel(path, sheet = "2nd wash")
plt.ACN.pct = d.opt.pct.recovery %>%
ggplot(aes(x = solvent.pct, y = recovery.mean, color = compound)) +
geom_boxplot(outlier.alpha = 0, aes(group = solvent.pct)) +
# geom_errorbar(aes(ymin = recovery.mean - recovery.sd, ymax = recovery.mean + recovery.sd),
#               position = position_dodge(.3), size = .2, width = 2) +
geom_point(position = position_dodge(.4), shape = 21, fill = "white", size = 1) +
theme(legend.position = "none") +
# coord_flip(ylim = c(0, 130)) +
scale_y_continuous(breaks = seq(0, 150, by = 10)) +
labs(y = "Recovery", x= "Acetonitrile percentage") +
coord_cartesian(ylim = c(0, 130))
plt.ACN.pct
# Secondary wash volume
d.opt.wash = read_excel(path, sheet = "2nd wash")
d.opt.wash = d.opt.wash %>%
gather(-c(`Data File`, Name, `Acq. Date-Time`, volume), key = compound, value = resp)
x = d.opt.wash %>% filter(volume == "ctrl")
x = x %>% group_by(compound) %>%
summarise(resp.ctrl = mean(resp), resp.ctrl.sd = sd(resp))
y = d.opt.wash %>% filter(volume != "ctrl") %>%
group_by(volume, compound) %>%
summarise(resp.mean = mean(resp), resp.sd = sd(resp))
d.opt.wash = y %>% left_join(x, by = "compound") %>%
mutate(recovery.mean = resp.mean / resp.ctrl * 100,
recovery.sd = sqrt((resp.sd/resp.mean)^2 + (resp.ctrl.sd/resp.ctrl)^2) * recovery.mean )
plt.wash = d.opt.wash %>%
ggplot(aes(x = volume, y = recovery.mean, color = compound)) +
geom_boxplot(outlier.alpha = 0, aes(group = volume)) +
geom_point(position = position_dodge(.5), shape = 21, fill = "white", size = 1) +
# geom_errorbar(aes(ymin = recovery.mean - recovery.sd,
#                   ymax = recovery.mean + recovery.sd),
#               size = .1, width = .5, position = position_dodge(.5)) +
theme(legend.position = "None") +
labs(y = "Recovery", x = "Secondary wash volume (uL)") +
coord_cartesian(ylim = c(0, 130)) +
scale_y_continuous(breaks = seq(0, 130, 10))
plt.wash
grid.arrange(plt.ACN.pct, plt.wash, nrow = 1)
# Activation
d.opt.act = read_excel(path, sheet = "Activation")
d.opt.act = d.opt.act %>%
gather(-c(`Data File`, Name, `Acq. Date-Time`, Volume), key = compound, value = resp)
grid.arrange(plt.ACN.pct, plt.wash, nrow = 1)
# Activation
d.opt.act = read_excel(path, sheet = "Activation")
d.opt.act = d.opt.act %>%
gather(-c(`Data File`, Name, `Acq. Date-Time`, Volume), key = compound, value = resp)
x = d.opt.act %>% filter(Volume != "ctrl")
x = x %>% group_by(compound, Volume) %>%
summarise(resp.mean = mean(resp),resp.sd = sd(resp))
y = d.opt.act %>% filter(Volume == "ctrl") %>%
group_by(compound) %>%
summarise(resp.ctrl.mean = mean(resp), resp.ctrl.sd = sd(resp))
d.opt.act = x %>% left_join(y, by = "compound") %>%
mutate(recovery = resp.mean / resp.ctrl.mean * 100,
recovery.sd = sqrt((resp.sd / resp.mean)^2 +  (resp.ctrl.sd/ resp.ctrl.mean)^2) * recovery )
plt.act = d.opt.act %>%
ggplot(aes(x = Volume, y = recovery, color = compound)) +
geom_boxplot(outlier.alpha = 0, aes(group = Volume)) +
geom_point(position = position_dodge(.5), shape = 21, fill = "white") +
theme(legend.position = "None")
plt.act
# draw together
o = d.opt.pct.recovery %>% select(solvent.pct, compound, recovery.mean) %>%
rename(recovery = recovery.mean, level = solvent.pct) %>%
mutate(experiment = "ACN percentage")
p = d.opt.wash %>% select(volume, compound, recovery.mean) %>%
rename(recovery = recovery.mean, level = volume) %>%
mutate(experiment = "Secondary wash")
q = d.opt.act %>% select(Volume, compound, recovery) %>%
rename(level = Volume) %>%
mutate(experiment = "Activation")
k = rbind(o, p) %>% rbind(q)
k$experiment = k$experiment %>%
factor(levels = c("ACN percentage", "Secondary wash", "Activation"), ordered = T)
library(RColorBrewer)
color.compound = (c(brewer.pal(8, "Dark2"),
brewer.pal(11, "Spectral")[-c(5, 6, 7)],# remove light colors
"black", "grey") %>% sort() %>%
colorRampPalette())(k$compound %>% n_distinct())
plt.EMR.optimization = k %>% group_by(experiment) %>% mutate(n = n_distinct(level)) %>%
ggplot(aes(x = level, y = recovery, color = compound, fill = compound)) +
geom_boxplot(aes(group = level), outlier.alpha = 0, fill = "snow4") +
geom_point(position = position_dodge(.4),
shape = 21, fill = "white", size = 2) +
geom_point(position = position_dodge(.4),
shape = 21, size = 2, alpha = .2) +
facet_wrap(~experiment, scales = "free_x") +
scale_y_continuous(limits = c(20, 120), breaks = seq(20, 120, 10)) +
theme(legend.position = "None",
axis.text = element_text(size = 12),
axis.title = element_text(size = 13),
strip.text = element_text(size = 12)) +
scale_color_manual(values = color.compound) +
scale_fill_manual(values = color.compound)
plt.EMR.optimization
p2
p2
```{r, message=F, warning=F, error=F, fig.width=18, fig.height=5}
```{r, message=F, warning=F, error=F, fig.width=18, fig.height=5}
p2
p2
# p1 small screen 17 X 12
p1
# p1 small screen 17 X 12
p1
# p1 small screen 17 X 12
p1
plt.EMR.optimization
# EMR opt 9.4 X 5.03
plt.EMR.optimization
# EMR opt 9.4 X 5.03
plt.silica
plt.silica
plt.silica = d.silica %>%
filter(! compound %in% lowRcmpd) %>%
ggplot(aes(x = `mass (mg)`, y = recovery)) +
geom_boxplot(outlier.alpha = 0, aes(group = c(`mass (mg)`)),
data = d.silica) + # boxplot showing the distribution of all
geom_point(position = position_jitter(.1), shape = 21, fill = "white") +
theme(legend.position = "None") +
facet_wrap(~ratio, nrow = 1) +
scale_y_continuous(breaks = seq(0, 140, 10)) +
coord_cartesian(ylim = c(0, 130)) +
geom_point(data = d.silica %>% filter(compound %in% lowRcmpd),
position = position_dodge(.2), size = 2, stroke = .5,
aes(color = compound), shape = 21, fill = "white") +
geom_point(data = d.silica %>% filter(compound %in% lowRcmpd),
position = position_dodge(.2),
aes(color = compound, fill = compound), size = 2, alpha = .2) +
geom_text_repel(data = d.silica %>% filter(compound %in% lowRcmpd),
aes(label = compound, color = compound), size = 2,
position = position_dodge(.2)) +
scale_color_manual(values = color.compound) +
scale_fill_manual(values = color.compound)
# plt.silica.all
ggdraw() +
draw_plot(plt.EMR.optimization, y = .5, height = .5) +
draw_plot(plt.sorbent2, x = .1, width = .8, height = .5)
# plt.silica.all
ggdraw() +
draw_plot(plt.EMR.optimization, y = .5, height = .5) +
draw_plot(plt.sorbent2, x = .1, width = .8, height = .5)
ggdraw() +
draw_plot(plt.sorbent2, y = .5, height = .5, x = .2, width = .6) +
draw_plot(plot_grid(plt.silica.matrix.Notcorrected,
plt.silica.matrix.IS.Corrected, nrow = 1),
x = 0, width = 1, height = .5, y = 0)
setwd("/Users/Boyuan/Desktop/My publication/18. Polyphenol EMR J. Food Chem (Zhiya)/EMRpolyphenolsGithub")
getwd()
rmarkdown::render_site()
rmarkdown::render_site()
